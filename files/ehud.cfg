// edithud v1.1

// MIT License

// Copyright (c) 2018 Redon

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// -----

// CONSTANTS

ehud_VERSION = "1.1"
ehud_BASEAMMO = "random shells bullets rockets riflerounds grenades cartridges"
ehud_DIRECTIONS = "up west north down east south invalid"
ehud_MONSTERS = "ogro rhino ratamahatta slith bauul hellpig knight goblin spider"
ehud_PARTICLE_NAMES = ["flame ^fs^f6smoke^fr" "steam" "fountain" "fireball" "streak" "meter" "meter ^fs^f6background^fr" "lightning" 0 "steam" "water" "flame" "smoke" "snow" 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "lens flare" "lens flare ^fs^f6sparkle^fr" "lens flare ^fs^f2sun^fr" "lens flare ^fs^f2sun^fr ^fs^f6sparkle^fr"]
ehud_SEP = " | "
ehud_TRIGGERS = "-1 0 32 2 34 4 36 6 38 35 51 99 8 40 73 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 168 -1 -1"
ehud_DEFAULT_EDITHUD = [if (enthavesel) [concatword (entget) " : " (enthavesel) " selected"]]
GREEN = 0
BLUE = 1
YELLOW = 2
RED = 3
GRAY = 4
MAGENTA = 5
ORANGE = 6
WHITE = 7


// GENERAL UTILITY FUNCTIONS

color = [
  format "^fs^f%1%2^fr" $arg2 $arg1
]

// check if $arg1 is in list $arg2
isinlist = [
  >= (indexof $arg2 $arg1) 0
]

// an actual modulo function
% = [ 
  local res
  res = (mod $arg1 $arg2)
  if (< $res 0) (+ $res $arg2) $res
]

strip_color = [
  local str
  str = (escape $arg1)
  loop i 8 [
    str = (strreplace $str (concatword "^^f" $i) "")
  ]
  str = (strreplace (strreplace $str "^^fr" "") "^^fs" "")
  unescape (substr $str 1 (- (strlen $str) 2))
]

comma_list = [
  local res first
  res = ""
  first = 1
  loop i $numargs [
    if (!=s $[arg@(+ $i 1)] "") [
      if $first [
        res = $[arg@(+ $i 1)]
        first = 0
      ] [
        res = (concatword $res ", " $[arg@(+ $i 1)])
      ]
    ]
  ]
  result $res
]


// MAIN EDITHUD LOOP
ehud_loop = [
  concatword (? (> (enthavesel) 1) (concatword "^t^t ^fs^f0" (enthavesel) "^fr entities selected^n")) (ehud_floatspeed) (? (enthavesel) (concatword "^t " (ehud_entity)))
]

// EDITHUD COMPONENTS
ehud_floatspeed = [
  format "FS ^fs^f2%1^fr" (concatword (divf $floatspeed 100) "x")
]

ehud_entinfo = [
  format "%6 -> %1%7%2%7%3%7%4%7%5" $arg1 $arg2 $arg3 $arg4 $arg5 (enttype) $ehud_SEP
]

ehud_entity = [
  local str et
  str = ""
  et = (enttype)
  if (=s $et "light") [
    str = (ehud_entinfo (ehud_positive "radius" (entattr 0)) (format "red %1" (color (entattr 1) $RED)) (format "green %1" (color (entattr 2) $GREEN)) (format "blue %1" (color (entattr 3) $BLUE)) (ehud_none (entattr 4)))
  ]
  if (isinlist $et "spotlight envmap") [
    str = (ehud_entinfo (ehud_positive "radius" (entattr 0)) (ehud_none (entattr 1)) (ehud_none (entattr 2)) (ehud_none (entattr 3)) (ehud_none (entattr 4)))
  ]
  if (=s $et "sound") [
    str = (ehud_entinfo (ehud_resource "sfx" (entattr 0) "mapsound") (ehud_positive "radius" (entattr 1)) (ehud_positive "size" (entattr 2)) (ehud_none (entattr 3)) (ehud_none (entattr 4)))
  ]
  if (isinlist $et "playerstart flag") [
    str = (ehud_entinfo (ehud_yaw (entattr 0)) (ehud_team (entattr 1)) (ehud_none (entattr 2)) (ehud_none (entattr 3)) (ehud_none (entattr 4)))
  ]
  if (=s $et "base") [
    str = (ehud_entinfo (ehud_baseammo (entattr 0)) (ehud_basename (entattr 1)) (ehud_none (entattr 2)) (ehud_none (entattr 3)) (ehud_none (entattr 4)))
  ]
  if (isinlist $et "shells bullets rockets riflerounds grenades cartridges health healthboost greenarmour yellowarmour quaddamage") [
    str = (ehud_entinfo (ehud_none (entattr 0)) (ehud_none (entattr 1)) (ehud_none (entattr 2)) (ehud_none (entattr 3)) (ehud_none (entattr 4)))
  ]
  if (=s $et "teleport") [
    str = (ehud_entinfo (ehud_positive "destination" (entattr 0)) (ehud_alt "model" (entattr 1) "slot") (ehud_tpcheck (entattr 2)) (ehud_alt "sfx" (entattr 3) "mapsound")  (ehud_none (entattr 4)))
  ]
  if (=s $et "teledest") [
    str = (ehud_entinfo (ehud_yaw (entattr 0)) (ehud_positive "source" (entattr 1)) (ehud_tdvel (entattr 2)) (ehud_none (entattr 3)) (ehud_none (entattr 4)))
  ]
  if (=s $et "jumppad") [
    str = (ehud_entinfo (ehud_prop "z" (entattr 0)) (ehud_prop "y" (entattr 1)) (ehud_prop "x" (entattr 2)) (ehud_alt "sfx" (entattr 3) "mapsound") (ehud_none (entattr 4)))
  ]
  if (=s $et "mapmodel") [
    str = (ehud_entinfo (ehud_yaw (entattr 0)) (ehud_resource "model" (entattr 1) "slot") (ehud_trigger (entattr 2)) (ehud_positive "tag" (entattr 3)) (ehud_none (entattr 4)))
  ]
  if (=s $et "box") [
    str = (ehud_entinfo (ehud_yaw (entattr 0)) (ehud_resource "model" (entattr 1) "slot") (ehud_positive "weight" (entattr 2)) (ehud_none (entattr 3)) (ehud_none (entattr 4)))
  ]
  if (=s $et "barrel") [
    str = (ehud_entinfo (ehud_yaw (entattr 0)) (ehud_resource "model" (entattr 1) "slot") (ehud_positive "weight" (entattr 2)) (ehud_positive "health" (entattr 3)) (ehud_none (entattr 4)))
  ]
  if (isinlist $et "platform elevator") [
    str = (ehud_entinfo (ehud_yaw (entattr 0)) (ehud_resource "model" (entattr 1) "slot") (ehud_prop "tag" (entattr 2)) (ehud_prop "speed" (entattr 3)) (ehud_none (entattr 4)))
  ]
  if (=s $et "monster") [
    str = (ehud_entinfo (ehud_yaw (entattr 0)) (ehud_monster (entattr 1)) (ehud_monstertag (entattr 2)) (ehud_none (entattr 3)) (ehud_none (entattr 4)))
  ]
  if (=s $et "respawnpoint") [
    str = (ehud_entinfo (ehud_yaw (entattr 0)) (ehud_spin (entattr 1)) (ehud_none (entattr 2)) (ehud_none (entattr 3)) (ehud_none (entattr 4)))
  ]
  if (=s $et "carrot") [ // wtf is this
    str = (ehud_entinfo (ehud_none (entattr 0)) (ehud_spin (entattr 1)) (ehud_none (entattr 2)) (ehud_none (entattr 3)) (ehud_none (entattr 4)))
  ]
  if (=s $et "particles") [
    local pt
    pt = (entattr 0)
    cond [isinlist $pt "1 2"] [
      str = (ehud_entinfo (ehud_particle_type $pt) (ehud_direction (entattr 1)) (? (= $pt 2) (ehud_rgb "color" (entattr 2)) (ehud_none (entattr 2))) (ehud_none (entattr 3)) (ehud_none (entattr 4)))
    ] [= (entattr 0) 3] [
      str = (ehud_entinfo (ehud_particle_type $pt) (ehud_positive "radius" (entattr 1)) (ehud_rgb "color" (entattr 2)) (ehud_none (entattr 3)) (ehud_none (entattr 4)))
    ] [isinlist $pt "4 7 9 10 13"] [
      if (< (entattr 1) 256) [
        str = (ehud_entinfo (ehud_particle_type $pt) (? (isinlist $pt "9 13") (ehud_none (entattr 1)) (ehud_direction (entattr 1))) (? (isinlist $pt "9 13") (ehud_none (entattr 2)) (ehud_positive "length" (entattr 2))) (ehud_rgb "color" (entattr 3)) (ehud_none (entattr 4)))
      ] [
        str = (ehud_entinfo (ehud_particle_type $pt) (ehud_shape (entattr 1) $pt) (ehud_positive "size" (entattr 2)) (ehud_rgb "color" (entattr 3)) (ehud_ttl (entattr 4)))
      ]
    ] [isinlist $pt "5 6"] [
      str = (ehud_entinfo (ehud_particle_type $pt) (ehud_percent "fill" (entattr 1)) (ehud_rgb "bar" (entattr 2)) (? (= (entattr 0) 6) (ehud_rgb "background" (entattr 3)) (ehud_none (entattr 3))) (ehud_none (entattr 4)))
    ] [isinlist $pt "0 11 12"] [
      str = (ehud_entinfo (ehud_particle_type $pt) (ehud_positive "radius" (entattr 1)) (ehud_positive "height" (entattr 2)) (ehud_rgb "color" (entattr 3)) (ehud_none (entattr 4)))
    ] [isinlist $pt "32 33 34 35"] [
      str = (ehud_entinfo (ehud_particle_type $pt) (format "red %1" (color (entattr 1) $RED)) (format "green %1" (color (entattr 2) $GREEN)) (format "blue %1" (color (entattr 3) $BLUE)) (ehud_none (entattr 4)))
    ] [ 1 ] [
      str = (ehud_entinfo (ehud_particle_type $pt) (ehud_none (entattr 1)) (ehud_none (entattr 2)) (ehud_none (entattr 3)) (ehud_none (entattr 4)))
    ]
  ]
  result $str
]

// ENTITY FUNCTIONS - All of these functions create some part of the ehud_ents string

// general attributes
ehud_none = [
  color $arg1 $GRAY
]

ehud_prop = [
  concat $arg1 (color $arg2 $YELLOW)
]

ehud_positive = [
  concat $arg1 (color $arg2 (cond [< $arg2 0] $RED [= $arg2 0] $ORANGE [1] $YELLOW))
]

ehud_team = [
  local str
  case $arg1 0 [
    str = (color "neutral" $GREEN)
  ] 1 [
    str = (color "good" $BLUE)
  ] 2 [
    str = (color "evil" $RED)
  ] () [
    str = (color (format "invalid (%1)" $arg1) $GRAY)
  ]
  concat "team" $str
]

ehud_yaw = [
  concat "yaw" (color (- (mod (+ $arg1 179) 360) 179) (? (mod $arg1 15) $YELLOW $ORANGE))
]

ehud_baseammo = [
  local str
  cond [< $arg1 0] [
    str = (color (concat "group" (* $arg1 -1)) $YELLOW)
  ] [< $arg1 (listlen $ehud_BASEAMMO)] [
    str = (color (at $ehud_BASEAMMO $arg1) (? $arg1 $GREEN $ORANGE))
  ] [1] [
    str = (color (format "random (%1)" $arg1) $RED)
  ]
  concat "ammo" $str
]

ehud_basename = [
  local str
  cond [< $arg1 0] [
    str = (color (format "invalid (%1)" $arg1) $GRAY)
  ] [= $arg1 0] [
    str = (color "none" $ORANGE)
  ] [1] [
    if (getalias base_@arg1) [
      str = (color (strip_color $[base_@arg1]) $GREEN)
    ] [
      str = (color (format "$base_%1" $arg1) $YELLOW)
    ]
  ]
  concat "name" $str
]

ehud_tdvel = [
  local str outofrange preserve
  outofrange = (&& (!= $arg1 0) (!= $arg1 1))
  preserve = (> $arg1 0)
  concat "velocity" (color (concatword (? $preserve "preserve" "reset") (? $outofrange (format " (%1)" $arg1))) (? $outofrange $RED (? $arg1 $GREEN $ORANGE)))
]

ehud_tpcheck = [
  local str
  cond [< $arg1 0] [
    str = (color (format "none (%1)" $arg1) $RED)
  ] [= $arg1 0] [
    str = (color "none" $ORANGE)
  ] [1] [
    str = (color (format "$can_teleport_%1" $arg1) $YELLOW)
  ]
  concat "check" $str
]

// resources that are registered per map: mapmodels, sounds. alt if ent has a set default value
ehud_resource = [
  local str
  cond [>= $arg2 0] [
    str = (color (concat $arg3 $arg2) $YELLOW)
  ] [= $arg2 -1] [
    str = (color "none" $ORANGE)
  ] [1] [
    str = (color (format "none (%1)" $arg2) $RED)
  ]
  concat $arg1 $str
]

ehud_alt = [
  local str
  cond [> $arg2 0] [
    str = (color (concat $arg3 $arg2) $YELLOW)
  ] [= $arg2 0] [
    str = (color "default" $ORANGE)
  ] [1] [
    str = (color (format "none (%1)" $arg2) $RED)
  ]
  concat $arg1 $str
]

ehud_monster = [
  local str
  if (|| (< $arg1 0) (>= $arg1 (listlen $ehud_MONSTERS))) [
    str = (color (format "invalid (%1)" $arg1) $GRAY)
  ] [
    str = (color (at $ehud_MONSTERS $arg1) $GREEN)
  ]
  concat "monster" $str
]

ehud_monstertag = [
  concat "tag" (color (format "$monster_dead_%1" $arg1) (? (< $arg1 0) $RED $YELLOW))
]

ehud_spin = [
  local str
  case $arg1 0 [
    str = (color "slow" $ORANGE)
  ] 1 [
    str = (color "fast" $GREEN)
  ] () [
    str = (color (format "fast (%1)" $arg1) $RED)
  ]
  concat "spin" $str
]

// mapmodel triggers
ehud_trigger = [
  local type typeprops typestr typecolor
  type = (% $arg1 32)
  typeprops = (at $ehud_TRIGGERS $type)
  if (> $typeprops -1) [
    typestr = (comma_list (ehud_trig_end) (ehud_trig_disappear) (ehud_trig_collide) (ehud_trig_many) (ehud_trig_toggle) (ehud_trig_rumble) (ehud_trig_autoreset) (ehud_trig_locked))
  ] [
    typestr = (color "no trigger" (? $arg1 $GRAY $YELLOW))
  ]
  typecolor = (cond [= $arg1 0] $YELLOW [= $typeprops -1] $GRAY [|| (< $arg1 0) (>= $arg1 32)] $RED [1] $YELLOW)
  concat "type" (color $type $typecolor) "-" $typestr
]

ehud_trigprop = [
  ? (& (at $ehud_TRIGGERS (% (entattr 2) 32)) (<< 1 $arg1)) $arg2 $arg3
]

ehud_trig_collide = [
  ehud_trigprop 0 (color "clip" $RED) (color "noclip" $GREEN)
]

ehud_trig_toggle = [
  ehud_trigprop 1 (color "toggle" $GREEN) (color "no toggle" $RED)
]

ehud_trig_many = [
  ehud_trigprop 2 (color "many" $YELLOW) (color "once" $ORANGE)
]

ehud_trig_disappear = [
  ehud_trigprop 3 (color "disappear" $BLUE) ""
]

ehud_trig_autoreset = [
  ehud_trigprop 4 (color "reset" $BLUE) ""
]

ehud_trig_rumble = [
  ehud_trigprop 5 (color "rumble" $YELLOW) (color "silent" $ORANGE)
]

ehud_trig_locked = [
  ehud_trigprop 6 (color "locked" $RED) ""
]

ehud_trig_end = [
  ehud_trigprop 7 (color "level end" $MAGENTA) ""
]


// particles

ehud_direction = [
  local direction outofrange
  direction = (cond [>= $arg1 6] (+ (mod $arg1 3) 3) [>= $arg1 0] $arg1 [ 1 ] (? (= (% $arg1 3) 1) 1 6))
  outofrange = (|| (< $arg1 0) (>= $arg1 6))
  concat "direction" (color (concat (at $ehud_DIRECTIONS $direction) (? $outofrange (format "(%1)" $arg1))) (? $outofrange (? (= $direction 6) $GRAY $RED) $YELLOW))
]

ehud_particle_type = [
  local ptname str
  ptname = (? (>= $arg1 0) (at $ehud_PARTICLE_NAMES $arg1) "");
  format "type %1 - %2" (color $arg1 (? $ptname $YELLOW $GRAY)) (? $ptname (color (unescape $ptname) $MAGENTA) (color "invalid" $GRAY))
]

ehud_percent = [
  format "%1 %2" $arg1 (color (concatword $arg2 "%") (? (|| (< $arg2 0) (> $arg2 100)) $RED $YELLOW))
]

ehud_rgb = [
  concat $arg1 (format "(%1, %2, %3)" (color (% (div $arg2 256) 16) $RED) (color (% (div $arg2 16) 16) $GREEN) (color (% $arg2 16) $BLUE))
]

ehud_shape = [
  local val reversed outofrange str
  val = (mod $arg1 32)
  reversed = (>= (mod $arg1 64) 32)
  outofrange = (>= $arg1 320)
  cond [isinlist $val "0 1 2"] [ // circular
    str = (format "disk %1 %2" (color (? $reversed "inwards" "outwards") $BLUE) (color (case $val 0 [result "horizontal"] 1 [result "perpendicular to x-axis"] 2 [result "perpendicular to y-axis"]) $YELLOW))
  ] [isinlist $val "3 4 5"] [ // cylinder
    str = (format "cylinder %1" (color (concat "flowing" (at $ehud_DIRECTIONS (- (+ $val (* $reversed 3)) 3))) $ORANGE))
  ] [isinlist $val "6 7 8 9 10 11"] [ // cone
    str = (format "cone %1 %2" (color (? $reversed "inwards" "outwards") $BLUE) (color (concat "facing" (at $ehud_DIRECTIONS (- $val 6))) $ORANGE))
  ] [isinlist $val "12 13 14"] [ // cubic
    str = (format "cuboid %1" (color (concat "flowing" (at $ehud_DIRECTIONS (- (+ $val (* $reversed 3)) 12))) $ORANGE))
  ] [isinlist $val "15 16 17 18 19 20"] [ // plane
    str = (format "plane %1 %2" (color (concat "flowing" (at $ehud_DIRECTIONS (+ (mod $val 3) (* $reversed 3)))) $ORANGE) (color (? (mod $val 3) (at "horizontally vertically" (mod $val 2)) (? (= $val 15) "along y-axis" "along x-axis")) $YELLOW))
  ] [isinlist $val "21 22 23"] [ // sphere
    str = (concat "sphere" (color (? $reversed "inwards" "outwards") $BLUE))
  ] [&& (isinlist $arg2 "9 10 13") (isinlist $val "24 25 26")] [
    str = (concat "square" (color (case $val 24 [result "horizontal"] 25 [result "perpendicular to x-axis"] 26 [result "perpendicular to y-axis"]) $YELLOW)) 
  ] [isinlist $arg2 "9 10 13"] [
    str = "point"
  ] [ 1 ] [
    str = (color "nothing" $GRAY)
  ]
  format "shape %1 - %2" (color (concatword (+ $val 1) (? $reversed B A)) (? $outofrange $RED $YELLOW))(color $str $GREEN)
]

ehud_ttl = [
  local str
  cond [= $arg1 0] [
    str = (color "default 200 ms" $ORANGE)
  ] [< $arg1 0] [
    str = (color (format "default 200 ms (%1)" $arg1) $RED)
  ] [> $arg1 10000] [
    str = (concat (color "10000 ms" $RED) (color (format "(%1)" $arg1) $GRAY))
  ] [1] [
    str = (color (format "%1 ms" $arg1) $YELLOW)
  ]
  concat "ttl" $str
]

// gui

ehud_save_edithud = [
  ehud_saved_edithud = $edithud
]

ehud_restore_edithud = [
  if (=s (getalias ehud_saved_edithud) "") [
    echo (color "there is no edithud backup to restore" $RED)
  ] [
    edithud = $ehud_saved_edithud
    ehud_saved_edithud = ""
  ]
]

ehud_install = [
  edithud = [ehud_loop]
]

newgui ehud [
  guitext (format "extended %1, version %2" (color "edithud" $GREEN) (color $ehud_VERSION $MAGENTA)) 0
  guibar
  guibutton (format "install ehud (overwrites %1)" (color "edithud" $GREEN)) [ehud_save_edithud; ehud_install]
  if (getalias ehud_saved_edithud) [
    guibutton (concat "restore" (color "edithud" $GREEN) "backup") [ehud_restore_edithud]
  ] [
    guitext (concat "(your current" (color "edithud" $GREEN) "will be backed up)")
  ]
  guibutton (concat "install default" (color "edithud" $GREEN)) [edithud = $ehud_DEFAULT_EDITHUD]
  guibar
  guibutton "close" [] "exit"
]

ehud = [showgui ehud]



